plugins {
    id 'org.springframework.boot' version '2.2.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'war'
    id 'maven'
    id 'org.jetbrains.kotlin.jvm' version '1.3.70'
    id "org.jetbrains.kotlin.plugin.jpa" version "1.3.70"
    id "org.jetbrains.kotlin.plugin.noarg" version "1.3.70"
    id "org.jetbrains.kotlin.plugin.spring" version "1.3.70"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.3.70"
}

allOpen {
    annotation("javax.persistence.Entity")
    annotation("javax.persistence.Embeddable")
    annotation("javax.persistence.MappedSuperclass")
}

group 'pr.eleks'
version '1.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

sourceSets {
    main.java.srcDir 'src/main/java'
    test.java.srcDir 'src/test/java'
    main.kotlin.srcDir 'src/main/kotlin'
    test.kotlin.srcDir 'src/test/kotlin'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-mail:2.2.4.RELEASE'
    implementation 'org.springframework.security:spring-security-test'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.10.2"
    runtimeOnly 'mysql:mysql-connector-java'
//    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    testImplementation 'com.h2database:h2:1.4.200'
    testImplementation 'org.awaitility:awaitility:3.1.2'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
//    implementation fileTree(dir: 'lib', include: '*.jar')
}

test {
    useJUnitPlatform()
    systemProperty "spring.profiles.active", "test"
}

task writeNewPom {
    doLast { pom {} writeTo("pom.xml") }
}

classes.finalizedBy(writeNewPom)

bootRun {
    systemProperty "spring.profiles.active", "local"
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}